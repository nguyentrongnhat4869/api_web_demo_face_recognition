{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/Documents/Demo_beauty_face/demo/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgBase64: null,\n      file: null,\n      response: null\n    };\n\n    this.fileSelectedHandler = event => {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      let x = URL.createObjectURL(event.target.files[0]);\n\n      reader.onload = () => {\n        this.setState({\n          imgBase64: reader.result.split(\",\")[1],\n          file: x,\n          response: null\n        }); // console.log(reader.result);\n\n        console.log(x);\n        console.log(reader);\n      };\n    };\n\n    this.fileUploadHandler = () => {\n      const fd = new FormData();\n      var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n      fd.append(\"File\", imagedata);\n      axios.post(\"http://10.1.70.181:8000/api/checkimage\", fd).then(res => {\n        const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n          const byteCharacters = atob(b64Data);\n          const byteArrays = [];\n\n          for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\n            const byteNumbers = new Array(slice.length);\n\n            for (let i = 0; i < slice.length; i++) {\n              byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            const byteArray = new Uint8Array(byteNumbers);\n            byteArrays.push(byteArray);\n          }\n\n          const blob = new Blob(byteArrays, {\n            type: contentType\n          });\n          return blob;\n        };\n\n        let b64Data = res[\"data\"][\"Image\"];\n        const blob = b64toBlob(b64Data);\n        const x = URL.createObjectURL(blob);\n        this.setState({\n          file: x,\n          response: \"Score: \" + res[\"data\"][\"DATA\"]\n        });\n        console.log(imagedata);\n        console.log(\"respone\" + JSON.stringify(res[\"data\"][\"DATA\"]));\n      });\n    };\n  }\n\n  getFiles(files) {\n    this.setState({\n      selectedFile: files\n    });\n    console.log(files.base64);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fileUploadHandler.bind(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Search \"), this.state.file != null && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.file,\n      alt: \"dcm\",\n      width: \"420\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), this.state.response != null && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.response), this.state.response == \"\" && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Unknown\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nhatnt/Documents/Demo_beauty_face/demo/src/App.js"],"names":["React","Component","axios","App","state","imgBase64","file","response","fileSelectedHandler","event","reader","FileReader","readAsDataURL","target","files","x","URL","createObjectURL","onload","setState","result","split","console","log","fileUploadHandler","fd","FormData","imagedata","document","querySelector","append","post","then","res","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","JSON","stringify","getFiles","selectedFile","base64","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    imgBase64: null,\n    file: null,\n    response: null\n  };\n\n  fileSelectedHandler = event => {\n    let reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n    let x = URL.createObjectURL(event.target.files[0]);\n\n    reader.onload = () => {\n      this.setState({\n        imgBase64: reader.result.split(\",\")[1],\n        file: x,\n        response: null\n      });\n      // console.log(reader.result);\n      console.log(x)\n      console.log(reader)\n    };\n  };\n\n  fileUploadHandler = () => {\n    const fd = new FormData();\n    var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n    fd.append(\"File\", imagedata);\n    axios.post(\"http://10.1.70.181:8000/api/checkimage\", fd).then(res => {\n      const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n        const byteCharacters = atob(b64Data);\n        const byteArrays = [];\n      \n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n          const slice = byteCharacters.slice(offset, offset + sliceSize);\n      \n          const byteNumbers = new Array(slice.length);\n          for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n          }\n      \n          const byteArray = new Uint8Array(byteNumbers);\n          byteArrays.push(byteArray);\n        }\n      \n        const blob = new Blob(byteArrays, {type: contentType});\n        return blob;\n      }\n      let b64Data = res[\"data\"][\"Image\"];\n      const blob = b64toBlob(b64Data);\n      const x = URL.createObjectURL(blob);\n      this.setState({\n        file: x,\n        response: \"Score: \" + res[\"data\"][\"DATA\"]\n\n      });\n      console.log(imagedata)\n      console.log(\"respone\"+JSON.stringify(res[\"data\"][\"DATA\"]))\n    });\n  };\n\n  getFiles(files) {\n    this.setState({\n      selectedFile: files\n    });\n    console.log(files.base64);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input type=\"file\" onChange={this.fileSelectedHandler} />\n        <button onClick={this.fileUploadHandler.bind()}>Search </button>\n        {this.state.file != null && (\n          <div>\n            <img src={this.state.file} alt=\"dcm\" width=\"420\" />\n          </div>\n        )}\n        {this.state.response != null && <h1>{this.state.response}</h1>}\n        {this.state.response == \"\" && <h1>Unknown</h1>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}